{
    "sourceFile": "src/app/register/register.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 65,
            "patches": [
                {
                    "date": 1682701430628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1682701899469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,6 +10,6 @@\n   constructor() { }\n \n   ngOnInit() {\n   }\n-\n+  \n }\n"
                },
                {
                    "date": 1682702179449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,12 @@\n   styleUrls: ['./register.component.scss']\n })\n export class RegisterComponent implements OnInit {\n \n+  username: string = ''\n+  password: string = ''\n+  \n+\n   constructor() { }\n \n   ngOnInit() {\n   }\n"
                },
                {
                    "date": 1682702236356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,13 @@\n })\n export class RegisterComponent implements OnInit {\n \n   username: string = ''\n+  usernameValid: boolean = false;\n+\n   password: string = ''\n-  \n \n+\n   constructor() { }\n \n   ngOnInit() {\n   }\n"
                },
                {
                    "date": 1682702287832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,10 +10,10 @@\n   username: string = ''\n   usernameValid: boolean = false;\n \n   password: string = ''\n+  passwordValid: boolean = false;\n \n-\n   constructor() { }\n \n   ngOnInit() {\n   }\n"
                },
                {
                    "date": 1682704924833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,11 @@\n \n   password: string = ''\n   passwordValid: boolean = false;\n \n+  alias: string = ''\n+  aliasValid: boolean = false;\n+\n   constructor() { }\n \n   ngOnInit() {\n   }\n"
                },
                {
                    "date": 1682705292220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,6 +19,10 @@\n   constructor() { }\n \n   ngOnInit() {\n   }\n+\n+  isValidForm(): boolean {\n+    return this.usernameValid && this.passwordValid && this.aliasValid\n+  }\n   \n }\n"
                },
                {
                    "date": 1682705362666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n   ngOnInit() {\n   }\n \n   isValidForm(): boolean {\n+    console.log(this.usernameValid)\n     return this.usernameValid && this.passwordValid && this.aliasValid\n   }\n   \n }\n"
                },
                {
                    "date": 1682705805824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,8 @@\n   ngOnInit() {\n   }\n \n   isValidForm(): boolean {\n-    console.log(this.usernameValid)\n     return this.usernameValid && this.passwordValid && this.aliasValid\n   }\n   \n }\n"
                },
                {
                    "date": 1682706002412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,9 @@\n   ngOnInit() {\n   }\n \n   isValidForm(): boolean {\n-    return this.usernameValid && this.passwordValid && this.aliasValid\n+    let valid = this.usernameValid && this.passwordValid && this.aliasValid;\n+    return valid;\n   }\n   \n }\n"
                },
                {
                    "date": 1682706059384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,15 @@\n   ngOnInit() {\n   }\n \n   isValidForm(): boolean {\n-    let valid = this.usernameValid && this.passwordValid && this.aliasValid;\n+    let valid = false;\n+    try {\n+      let valid = this.usernameValid && this.passwordValid && this.aliasValid;\n+    } catch (error) {\n+      return valid;\n+    }\n+    \n     return valid;\n   }\n   \n }\n"
                },
                {
                    "date": 1682706085253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n \n   isValidForm(): boolean {\n     let valid = false;\n     try {\n-      let valid = this.usernameValid && this.passwordValid && this.aliasValid;\n+      valid = this.usernameValid && this.passwordValid && this.aliasValid;\n     } catch (error) {\n       return valid;\n     }\n     \n"
                },
                {
                    "date": 1682706101568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,10 @@\n \n   isValidForm(): boolean {\n     let valid = false;\n     try {\n-      valid = this.usernameValid && this.passwordValid && this.aliasValid;\n+      let valid = this.usernameValid && this.passwordValid && this.aliasValid;\n+      return valid;\n     } catch (error) {\n       return valid;\n     }\n     \n"
                },
                {
                    "date": 1682706110365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,16 +21,13 @@\n   ngOnInit() {\n   }\n \n   isValidForm(): boolean {\n-    let valid = false;\n     try {\n       let valid = this.usernameValid && this.passwordValid && this.aliasValid;\n       return valid;\n     } catch (error) {\n-      return valid;\n+      return false;\n     }\n-    \n-    return valid;\n   }\n   \n }\n"
                },
                {
                    "date": 1682706184697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,13 +21,8 @@\n   ngOnInit() {\n   }\n \n   isValidForm(): boolean {\n-    try {\n-      let valid = this.usernameValid && this.passwordValid && this.aliasValid;\n-      return valid;\n-    } catch (error) {\n-      return false;\n-    }\n+    return this.usernameValid && this.passwordValid && this.aliasValid\n   }\n   \n }\n"
                },
                {
                    "date": 1682706408853,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,14 +15,16 @@\n \n   alias: string = ''\n   aliasValid: boolean = false;\n \n+  validForm: boolean = false;\n+\n   constructor() { }\n \n   ngOnInit() {\n   }\n \n   isValidForm(): boolean {\n-    return this.usernameValid && this.passwordValid && this.aliasValid\n+    return this.usernameValid && this.passwordValid && this.aliasValid;\n   }\n   \n }\n"
                },
                {
                    "date": 1682706448726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n-import { Component, OnInit } from '@angular/core';\n+import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n \n @Component({\n   selector: 'app-register',\n   templateUrl: './register.component.html',\n   styleUrls: ['./register.component.scss']\n })\n-export class RegisterComponent implements OnInit {\n+export class RegisterComponent implements OnInit, OnChanges {\n \n   username: string = ''\n   usernameValid: boolean = false;\n \n@@ -22,9 +22,14 @@\n \n   ngOnInit() {\n   }\n \n+  ngOnChanges(changes: SimpleChanges): void {\n+    this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n+  }\n+\n   isValidForm(): boolean {\n+    validForm = \n     return this.usernameValid && this.passwordValid && this.aliasValid;\n   }\n   \n }\n"
                },
                {
                    "date": 1682706493018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,8 @@\n     this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n   }\n \n   isValidForm(): boolean {\n-    validForm = \n     return this.usernameValid && this.passwordValid && this.aliasValid;\n   }\n   \n }\n"
                },
                {
                    "date": 1682706598773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n-import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n+import { Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n \n @Component({\n   selector: 'app-register',\n   templateUrl: './register.component.html',\n   styleUrls: ['./register.component.scss']\n })\n-export class RegisterComponent implements OnInit, OnChanges {\n+export class RegisterComponent implements OnInit, DoCheck {\n \n   username: string = ''\n   usernameValid: boolean = false;\n \n@@ -22,8 +22,12 @@\n \n   ngOnInit() {\n   }\n \n+  ngDoCheck(): void {\n+    this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n+  }\n+\n   ngOnChanges(changes: SimpleChanges): void {\n     this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n   }\n \n"
                },
                {
                    "date": 1682706671972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n-import { Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n+import { AfterContentInit, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n \n @Component({\n   selector: 'app-register',\n   templateUrl: './register.component.html',\n   styleUrls: ['./register.component.scss']\n })\n-export class RegisterComponent implements OnInit, DoCheck {\n+export class RegisterComponent implements OnInit, AfterContentInit {\n \n   username: string = ''\n   usernameValid: boolean = false;\n \n@@ -22,8 +22,12 @@\n \n   ngOnInit() {\n   }\n \n+  ngAfterContentInit(): void {\n+    this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n+  }\n+\n   ngDoCheck(): void {\n     this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n   }\n \n"
                },
                {
                    "date": 1682706693976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,17 +26,9 @@\n   ngAfterContentInit(): void {\n     this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n   }\n \n-  ngDoCheck(): void {\n-    this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n-  }\n+  // ngDoCheck(): void {\n+  //   this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n+  // }\n \n-  ngOnChanges(changes: SimpleChanges): void {\n-    this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n-  }\n-\n-  isValidForm(): boolean {\n-    return this.usernameValid && this.passwordValid && this.aliasValid;\n-  }\n-  \n }\n"
                },
                {
                    "date": 1682706708753,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n-import { AfterContentInit, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n+import { AfterContentChecked, AfterContentInit, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n \n @Component({\n   selector: 'app-register',\n   templateUrl: './register.component.html',\n   styleUrls: ['./register.component.scss']\n })\n-export class RegisterComponent implements OnInit, AfterContentInit {\n+export class RegisterComponent implements OnInit, AfterContentChecked {\n \n   username: string = ''\n   usernameValid: boolean = false;\n \n"
                },
                {
                    "date": 1682706718014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,12 +22,16 @@\n \n   ngOnInit() {\n   }\n \n-  ngAfterContentInit(): void {\n+  ngAfterContentChecked(): void {\n     this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n   }\n \n+  ngAfterContentInit(): void {\n+    \n+  }\n+\n   // ngDoCheck(): void {\n   //   this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n   // }\n \n"
                },
                {
                    "date": 1682706735906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   ngOnInit() {\n   }\n \n   ngAfterContentChecked(): void {\n-    this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n+    this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n \n   ngAfterContentInit(): void {\n     \n"
                },
                {
                    "date": 1682706794115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,13 +26,5 @@\n   ngAfterContentChecked(): void {\n     this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n \n-  ngAfterContentInit(): void {\n-    \n-  }\n-\n-  // ngDoCheck(): void {\n-  //   this.validForm = this.usernameValid && this.passwordValid && this.aliasValid;\n-  // }\n-\n }\n"
                },
                {
                    "date": 1682706813672,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,12 @@\n-import { AfterContentChecked, AfterContentInit, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n+import { AfterContentChecked, AfterContentInit, AfterViewChecked, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n \n @Component({\n   selector: 'app-register',\n   templateUrl: './register.component.html',\n   styleUrls: ['./register.component.scss']\n })\n-export class RegisterComponent implements OnInit, AfterContentChecked {\n+export class RegisterComponent implements OnInit, AfterContentChecked, AfterViewChecked {\n \n   username: string = ''\n   usernameValid: boolean = false;\n \n@@ -23,8 +23,12 @@\n   ngOnInit() {\n   }\n \n   ngAfterContentChecked(): void {\n+    // this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n+  }\n+\n+  ngAfterViewChecked(): void {\n     this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n \n }\n"
                },
                {
                    "date": 1682706829793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n   selector: 'app-register',\n   templateUrl: './register.component.html',\n   styleUrls: ['./register.component.scss']\n })\n-export class RegisterComponent implements OnInit, AfterContentChecked, AfterViewChecked {\n+export class RegisterComponent implements OnInit, AfterContentChecked {\n \n   username: string = ''\n   usernameValid: boolean = false;\n \n@@ -23,12 +23,8 @@\n   ngOnInit() {\n   }\n \n   ngAfterContentChecked(): void {\n-    // this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n-  }\n-\n-  ngAfterViewChecked(): void {\n     this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n \n }\n"
                },
                {
                    "date": 1682706872286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,10 +21,11 @@\n   constructor() { }\n \n   ngOnInit() {\n   }\n-\n+  \n   ngAfterContentChecked(): void {\n     this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n \n+\n }\n"
                },
                {
                    "date": 1682711264784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,11 @@\n   constructor() { }\n \n   ngOnInit() {\n   }\n-  \n+\n   ngAfterContentChecked(): void {\n     this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n \n-\n+  \n }\n"
                },
                {
                    "date": 1682711403525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,6 +26,8 @@\n   ngAfterContentChecked(): void {\n     this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n \n-  \n+  register(): void {\n+    \n+  }\n }\n"
                },
                {
                    "date": 1682711473696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import { AfterContentChecked, AfterContentInit, AfterViewChecked, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n+import { AuthenticatorService } from '../shared/service/Authenticator.service';\n \n @Component({\n   selector: 'app-register',\n   templateUrl: './register.component.html',\n@@ -17,9 +18,9 @@\n   aliasValid: boolean = false;\n \n   validForm: boolean = false;\n \n-  constructor() { }\n+  constructor(private authenticatorService: AuthenticatorService) { }\n \n   ngOnInit() {\n   }\n \n@@ -27,7 +28,7 @@\n     this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n \n   register(): void {\n-    \n+\n   }\n }\n"
                },
                {
                    "date": 1682711784570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n   ngAfterContentChecked(): void {\n     this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n-\n+  \n   register(): void {\n \n   }\n }\n"
                },
                {
                    "date": 1682711818975,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n import { AfterContentChecked, AfterContentInit, AfterViewChecked, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n import { AuthenticatorService } from '../shared/service/Authenticator.service';\n+import { MatDialog } from '@angular/material/dialog';\n \n @Component({\n   selector: 'app-register',\n   templateUrl: './register.component.html',\n@@ -18,17 +19,17 @@\n   aliasValid: boolean = false;\n \n   validForm: boolean = false;\n \n-  constructor(private authenticatorService: AuthenticatorService) { }\n+  constructor(private authenticatorService: AuthenticatorService, private matDialog: MatDialog) { }\n \n   ngOnInit() {\n   }\n \n   ngAfterContentChecked(): void {\n     this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n-  \n+\n   register(): void {\n \n   }\n }\n"
                },
                {
                    "date": 1682711835017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,7 +29,7 @@\n     this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n \n   register(): void {\n-\n+    \n   }\n }\n"
                },
                {
                    "date": 1682711994963,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { AfterContentChecked, AfterContentInit, AfterViewChecked, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n import { AuthenticatorService } from '../shared/service/Authenticator.service';\n import { MatDialog } from '@angular/material/dialog';\n+import { User } from '../shared/model/Authenticator.model';\n \n @Component({\n   selector: 'app-register',\n   templateUrl: './register.component.html',\n@@ -29,7 +30,11 @@\n     this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n \n   register(): void {\n-    \n+    let user: User = {\n+      username: this.username,\n+      password: this.password\n+    }\n+    this.authenticatorService.postUsers()\n   }\n }\n"
                },
                {
                    "date": 1682712059972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,12 @@\n \n   register(): void {\n     let user: User = {\n       username: this.username,\n-      password: this.password\n+      password: this.password,\n+      userProfile: {\n+        alias: this.alias\n+      }\n     }\n     this.authenticatorService.postUsers()\n   }\n }\n"
                },
                {
                    "date": 1682712088838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import { AfterContentChecked, AfterContentInit, AfterViewChecked, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n import { AuthenticatorService } from '../shared/service/Authenticator.service';\n import { MatDialog } from '@angular/material/dialog';\n import { User } from '../shared/model/Authenticator.model';\n+import { first } from 'rxjs';\n \n @Component({\n   selector: 'app-register',\n   templateUrl: './register.component.html',\n@@ -37,7 +38,12 @@\n       userProfile: {\n         alias: this.alias\n       }\n     }\n-    this.authenticatorService.postUsers()\n+    this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n+      res => {\n+        \n+      },\n+      error => {}\n+    );\n   }\n }\n"
                },
                {
                    "date": 1682712295949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,5 +45,11 @@\n       },\n       error => {}\n     );\n   }\n+\n+  validateUsernameFn(value: string): string {\n+    this.authenticatorService.isUsernameExist(value).pipe(first()).subscribe(\n+      \n+    );\n+  }\n }\n"
                },
                {
                    "date": 1682712557406,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,10 +46,20 @@\n       error => {}\n     );\n   }\n \n+  async isUsernameValid(): Promise<string> {\n+    return new Promise<string>((resolve, reject) => {\n+      this.authenticatorService.isUsernameExist(this.username).pipe(first()).subscribe(\n+        res => {\n+          resolve(res.exist ? \"\" : \"\");\n+        },\n+        error => {},\n+        () => {}\n+      );\n+    }\n+  }\n+\n   validateUsernameFn(value: string): string {\n-    this.authenticatorService.isUsernameExist(value).pipe(first()).subscribe(\n-      \n-    );\n+    \n   }\n }\n"
                },
                {
                    "date": 1682712578154,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n   async isUsernameValid(): Promise<string> {\n     return new Promise<string>((resolve, reject) => {\n       this.authenticatorService.isUsernameExist(this.username).pipe(first()).subscribe(\n         res => {\n-          resolve(res.exist ? \"\" : \"\");\n+          resolve(res.exist ? \"Username already exist\" : \"\");\n         },\n         error => {},\n         () => {}\n       );\n"
                },
                {
                    "date": 1682712605113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n       this.authenticatorService.isUsernameExist(this.username).pipe(first()).subscribe(\n         res => {\n           resolve(res.exist ? \"Username already exist\" : \"\");\n         },\n-        error => {},\n+        error => {resolve(\"Error checking username\")},\n         () => {}\n       );\n     }\n   }\n"
                },
                {
                    "date": 1682712617212,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,64 @@\n+import { AfterContentChecked, AfterContentInit, AfterViewChecked, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n+import { AuthenticatorService } from '../shared/service/Authenticator.service';\n+import { MatDialog } from '@angular/material/dialog';\n+import { User } from '../shared/model/Authenticator.model';\n+import { first } from 'rxjs';\n+\n+@Component({\n+  selector: 'app-register',\n+  templateUrl: './register.component.html',\n+  styleUrls: ['./register.component.scss']\n+})\n+export class RegisterComponent implements OnInit, AfterContentChecked {\n+\n+  username: string = ''\n+  usernameValid: boolean = false;\n+\n+  password: string = ''\n+  passwordValid: boolean = false;\n+\n+  alias: string = ''\n+  aliasValid: boolean = false;\n+\n+  validForm: boolean = false;\n+\n+  constructor(private authenticatorService: AuthenticatorService, private matDialog: MatDialog) { }\n+\n+  ngOnInit() {\n+  }\n+\n+  ngAfterContentChecked(): void {\n+    this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n+  }\n+\n+  register(): void {\n+    let user: User = {\n+      username: this.username,\n+      password: this.password,\n+      userProfile: {\n+        alias: this.alias\n+      }\n+    }\n+    this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n+      res => {\n+        \n+      },\n+      error => {}\n+    );\n+  }\n+\n+  async isUsernameValid(): Promise<string> {\n+    return new Promise<string>((resolve, reject) => {\n+      this.authenticatorService.isUsernameExist(this.username).pipe(first()).subscribe(\n+        res => {\n+          resolve(res.exist ? \"Username already exist\" : \"\");\n+        },\n+        error => {reject(\"Error checking username\")}\n+      );\n+    }\n+  }\n+\n+  validateUsernameFn(value: string): string {\n+    \n+  }\n+}\n"
                },
                {
                    "date": 1682712651861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,77 +53,12 @@\n         res => {\n           resolve(res.exist ? \"Username already exist\" : \"\");\n         },\n         error => {reject(\"Error checking username\")}\n-      );\n-    }\n+      )\n+    });\n   }\n \n   validateUsernameFn(value: string): string {\n     \n   }\n }\n-import { AfterContentChecked, AfterContentInit, AfterViewChecked, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n-import { AuthenticatorService } from '../shared/service/Authenticator.service';\n-import { MatDialog } from '@angular/material/dialog';\n-import { User } from '../shared/model/Authenticator.model';\n-import { first } from 'rxjs';\n-\n-@Component({\n-  selector: 'app-register',\n-  templateUrl: './register.component.html',\n-  styleUrls: ['./register.component.scss']\n-})\n-export class RegisterComponent implements OnInit, AfterContentChecked {\n-\n-  username: string = ''\n-  usernameValid: boolean = false;\n-\n-  password: string = ''\n-  passwordValid: boolean = false;\n-\n-  alias: string = ''\n-  aliasValid: boolean = false;\n-\n-  validForm: boolean = false;\n-\n-  constructor(private authenticatorService: AuthenticatorService, private matDialog: MatDialog) { }\n-\n-  ngOnInit() {\n-  }\n-\n-  ngAfterContentChecked(): void {\n-    this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n-  }\n-\n-  register(): void {\n-    let user: User = {\n-      username: this.username,\n-      password: this.password,\n-      userProfile: {\n-        alias: this.alias\n-      }\n-    }\n-    this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n-      res => {\n-        \n-      },\n-      error => {}\n-    );\n-  }\n-\n-  async isUsernameValid(): Promise<string> {\n-    return new Promise<string>((resolve, reject) => {\n-      this.authenticatorService.isUsernameExist(this.username).pipe(first()).subscribe(\n-        res => {\n-          resolve(res.exist ? \"Username already exist\" : \"\");\n-        },\n-        error => {resolve(\"Error checking username\")},\n-        () => {}\n-      );\n-    }\n-  }\n-\n-  validateUsernameFn(value: string): string {\n-    \n-  }\n-}\n"
                },
                {
                    "date": 1682712674551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n       error => {}\n     );\n   }\n \n-  async isUsernameValid(): Promise<string> {\n+  async isUsernameValid(username: string): Promise<string> {\n     return new Promise<string>((resolve, reject) => {\n       this.authenticatorService.isUsernameExist(this.username).pipe(first()).subscribe(\n         res => {\n           resolve(res.exist ? \"Username already exist\" : \"\");\n"
                },
                {
                    "date": 1682712682851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n   }\n \n   async isUsernameValid(username: string): Promise<string> {\n     return new Promise<string>((resolve, reject) => {\n-      this.authenticatorService.isUsernameExist(this.username).pipe(first()).subscribe(\n+      this.authenticatorService.isUsernameExist(username).pipe(first()).subscribe(\n         res => {\n           resolve(res.exist ? \"Username already exist\" : \"\");\n         },\n         error => {reject(\"Error checking username\")}\n"
                },
                {
                    "date": 1682712797612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,8 +57,10 @@\n       )\n     });\n   }\n \n-  validateUsernameFn(value: string): string {\n-    \n+  async validateUsernameFn(value: string): string {\n+    let message = \"\"\n+    await this.isUsernameValid(value).then(m => message = m).catch(m => message = m);\n+    return message;\n   }\n }\n"
                },
                {
                    "date": 1682712809900,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n       )\n     });\n   }\n \n-  async validateUsernameFn(value: string): string {\n+  async validateUsernameFn(value: string): Promise<string> {\n     let message = \"\"\n     await this.isUsernameValid(value).then(m => message = m).catch(m => message = m);\n     return message;\n   }\n"
                },
                {
                    "date": 1682741362524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,14 +38,14 @@\n       userProfile: {\n         alias: this.alias\n       }\n     }\n-    this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n-      res => {\n+    // this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n+    //   res => {\n         \n-      },\n-      error => {}\n-    );\n+    //   },\n+    //   error => {}\n+    // );\n   }\n \n   async isUsernameValid(username: string): Promise<string> {\n     return new Promise<string>((resolve, reject) => {\n"
                },
                {
                    "date": 1682741378929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n   ngAfterContentChecked(): void {\n     this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n   }\n \n-  register(): void {\n+  async register(): Promise<void> {\n     let user: User = {\n       username: this.username,\n       password: this.password,\n       userProfile: {\n"
                },
                {
                    "date": 1682741459751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,23 +38,26 @@\n       userProfile: {\n         alias: this.alias\n       }\n     }\n+\n+    let isExist = await this.isUsernameValid(this.username);\n+\n     // this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n     //   res => {\n         \n     //   },\n     //   error => {}\n     // );\n   }\n \n-  async isUsernameValid(username: string): Promise<string> {\n+  async isUsernameValid(username: string): Promise<boolean> {\n     return new Promise<string>((resolve, reject) => {\n       this.authenticatorService.isUsernameExist(username).pipe(first()).subscribe(\n         res => {\n-          resolve(res.exist ? \"Username already exist\" : \"\");\n+          resolve(res.exist);\n         },\n-        error => {reject(\"Error checking username\")}\n+        error => {reject(false)}\n       )\n     });\n   }\n \n"
                },
                {
                    "date": 1682741467016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,8 @@\n   }\n \n   async validateUsernameFn(value: string): Promise<string> {\n     let message = \"\"\n-    await this.isUsernameValid(value).then(m => message = m).catch(m => message = m);\n+    // await this.isUsernameValid(value).then(m => message = m).catch(m => message = m);\n     return message;\n   }\n }\n"
                },
                {
                    "date": 1682741472193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,9 +50,9 @@\n     // );\n   }\n \n   async isUsernameValid(username: string): Promise<boolean> {\n-    return new Promise<string>((resolve, reject) => {\n+    return new Promise<boolean>((resolve, reject) => {\n       this.authenticatorService.isUsernameExist(username).pipe(first()).subscribe(\n         res => {\n           resolve(res.exist);\n         },\n"
                },
                {
                    "date": 1682741483049,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,12 @@\n       }\n     }\n \n     let isExist = await this.isUsernameValid(this.username);\n-\n+    if(isExist)\n+    {\n+      \n+    }\n     // this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n     //   res => {\n         \n     //   },\n"
                },
                {
                    "date": 1682741513548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,8 +21,10 @@\n   aliasValid: boolean = false;\n \n   validForm: boolean = false;\n \n+  error: string = \"\";\n+\n   constructor(private authenticatorService: AuthenticatorService, private matDialog: MatDialog) { }\n \n   ngOnInit() {\n   }\n@@ -42,9 +44,9 @@\n \n     let isExist = await this.isUsernameValid(this.username);\n     if(isExist)\n     {\n-      \n+\n     }\n     // this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n     //   res => {\n         \n"
                },
                {
                    "date": 1682741537353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,9 @@\n     if(isExist)\n     {\n \n     }\n+    \n     // this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n     //   res => {\n         \n     //   },\n"
                },
                {
                    "date": 1682741565113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,11 +44,11 @@\n \n     let isExist = await this.isUsernameValid(this.username);\n     if(isExist)\n     {\n+      this.error = \"Username already Exist\"\n+    }\n \n-    }\n-    \n     // this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n     //   res => {\n         \n     //   },\n"
                },
                {
                    "date": 1682741578405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,12 +42,13 @@\n       }\n     }\n \n     let isExist = await this.isUsernameValid(this.username);\n-    if(isExist)\n-    {\n+    if(isExist) {\n       this.error = \"Username already Exist\"\n     }\n+    else\n+      this.error = \"\";\n \n     // this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n     //   res => {\n         \n"
                },
                {
                    "date": 1682741591024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,10 @@\n     }\n \n     let isExist = await this.isUsernameValid(this.username);\n     if(isExist) {\n-      this.error = \"Username already Exist\"\n+      this.error = \"Username already Exist\";\n+      return;\n     }\n     else\n       this.error = \"\";\n \n"
                },
                {
                    "date": 1682741892809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { AuthenticatorService } from '../shared/service/Authenticator.service';\n import { MatDialog } from '@angular/material/dialog';\n import { User } from '../shared/model/Authenticator.model';\n import { first } from 'rxjs';\n+import { ConfirmDialog } from '../shared/dialog/confirm-dialog/confirm-dialog.component';\n \n @Component({\n   selector: 'app-register',\n   templateUrl: './register.component.html',\n@@ -49,14 +50,14 @@\n     }\n     else\n       this.error = \"\";\n \n-    // this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n-    //   res => {\n-        \n-    //   },\n-    //   error => {}\n-    // );\n+    this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n+      res => {\n+        let dialog = this.matDialog.open(ConfirmDialog, {data: {title: \"Register Successful\", message: \"Do you want to auto login with registered information?\\nAnd redirect to home?\"}});\n+      },\n+      error => {}\n+    );\n   }\n \n   async isUsernameValid(username: string): Promise<boolean> {\n     return new Promise<boolean>((resolve, reject) => {\n"
                },
                {
                    "date": 1682741928479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,8 +53,15 @@\n \n     this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n       res => {\n         let dialog = this.matDialog.open(ConfirmDialog, {data: {title: \"Register Successful\", message: \"Do you want to auto login with registered information?\\nAnd redirect to home?\"}});\n+      \n+        dialog.afterClosed().pipe(first()).subscribe(\n+          res => {\n+            \n+          },\n+          error => {}\n+        );\n       },\n       error => {}\n     );\n   }\n"
                },
                {
                    "date": 1682742115496,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,17 +56,31 @@\n         let dialog = this.matDialog.open(ConfirmDialog, {data: {title: \"Register Successful\", message: \"Do you want to auto login with registered information?\\nAnd redirect to home?\"}});\n       \n         dialog.afterClosed().pipe(first()).subscribe(\n           res => {\n-            \n+            this.authenticatorService.login({username: res.username, password: res.password}).pipe(first()).subscribe(\n+              res => {},\n+\n+            );\n           },\n           error => {}\n         );\n       },\n       error => {}\n     );\n   }\n \n+  login(user: {username: string, password: string}): void\n+  {\n+    this.authenticatorService.login(this.loginForm.value).pipe(first()).subscribe(\n+      async res => {\n+        await this.authenticatorService.autoUpdateUserWithJwt(res.jwt!); \n+        this.router.navigate(['home'])\n+      },\n+      error => {this.error = 'invalid or wrong username or password'}\n+    );\n+  }\n+\n   async isUsernameValid(username: string): Promise<boolean> {\n     return new Promise<boolean>((resolve, reject) => {\n       this.authenticatorService.isUsernameExist(username).pipe(first()).subscribe(\n         res => {\n"
                },
                {
                    "date": 1682742131765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { MatDialog } from '@angular/material/dialog';\n import { User } from '../shared/model/Authenticator.model';\n import { first } from 'rxjs';\n import { ConfirmDialog } from '../shared/dialog/confirm-dialog/confirm-dialog.component';\n+import { Router } from '@angular/router';\n \n @Component({\n   selector: 'app-register',\n   templateUrl: './register.component.html',\n@@ -24,9 +25,9 @@\n   validForm: boolean = false;\n \n   error: string = \"\";\n \n-  constructor(private authenticatorService: AuthenticatorService, private matDialog: MatDialog) { }\n+  constructor(private authenticatorService: AuthenticatorService, private matDialog: MatDialog, private router: Router) { }\n \n   ngOnInit() {\n   }\n \n@@ -70,9 +71,9 @@\n   }\n \n   login(user: {username: string, password: string}): void\n   {\n-    this.authenticatorService.login(this.loginForm.value).pipe(first()).subscribe(\n+    this.authenticatorService.login(user).pipe(first()).subscribe(\n       async res => {\n         await this.authenticatorService.autoUpdateUserWithJwt(res.jwt!); \n         this.router.navigate(['home'])\n       },\n"
                },
                {
                    "date": 1682742164234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,12 +57,9 @@\n         let dialog = this.matDialog.open(ConfirmDialog, {data: {title: \"Register Successful\", message: \"Do you want to auto login with registered information?\\nAnd redirect to home?\"}});\n       \n         dialog.afterClosed().pipe(first()).subscribe(\n           res => {\n-            this.authenticatorService.login({username: res.username, password: res.password}).pipe(first()).subscribe(\n-              res => {},\n-\n-            );\n+            this.login({username: res.username, password: res.password});\n           },\n           error => {}\n         );\n       },\n"
                },
                {
                    "date": 1682742430134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n         let dialog = this.matDialog.open(ConfirmDialog, {data: {title: \"Register Successful\", message: \"Do you want to auto login with registered information?\\nAnd redirect to home?\"}});\n       \n         dialog.afterClosed().pipe(first()).subscribe(\n           res => {\n-            this.login({username: res.username, password: res.password});\n+            this.login({username: this.username, password: this.password});\n           },\n           error => {}\n         );\n       },\n"
                },
                {
                    "date": 1683640931888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,97 +1,97 @@\n-import { AfterContentChecked, AfterContentInit, AfterViewChecked, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\n-import { AuthenticatorService } from '../shared/service/Authenticator.service';\n-import { MatDialog } from '@angular/material/dialog';\n-import { User } from '../shared/model/Authenticator.model';\n-import { first } from 'rxjs';\n-import { ConfirmDialog } from '../shared/dialog/confirm-dialog/confirm-dialog.component';\n-import { Router } from '@angular/router';\n-\n-@Component({\n-  selector: 'app-register',\n-  templateUrl: './register.component.html',\n-  styleUrls: ['./register.component.scss']\n-})\n-export class RegisterComponent implements OnInit, AfterContentChecked {\n-\n-  username: string = ''\n-  usernameValid: boolean = false;\n-\n-  password: string = ''\n-  passwordValid: boolean = false;\n-\n-  alias: string = ''\n-  aliasValid: boolean = false;\n-\n-  validForm: boolean = false;\n-\n-  error: string = \"\";\n-\n-  constructor(private authenticatorService: AuthenticatorService, private matDialog: MatDialog, private router: Router) { }\n-\n-  ngOnInit() {\n-  }\n-\n-  ngAfterContentChecked(): void {\n-    this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\n-  }\n-\n-  async register(): Promise<void> {\n-    let user: User = {\n-      username: this.username,\n-      password: this.password,\n-      userProfile: {\n-        alias: this.alias\n-      }\n-    }\n-\n-    let isExist = await this.isUsernameValid(this.username);\n-    if(isExist) {\n-      this.error = \"Username already Exist\";\n-      return;\n-    }\n-    else\n-      this.error = \"\";\n-\n-    this.authenticatorService.postUsers(user).pipe(first()).subscribe(\n-      res => {\n-        let dialog = this.matDialog.open(ConfirmDialog, {data: {title: \"Register Successful\", message: \"Do you want to auto login with registered information?\\nAnd redirect to home?\"}});\n-      \n-        dialog.afterClosed().pipe(first()).subscribe(\n-          res => {\n-            this.login({username: this.username, password: this.password});\n-          },\n-          error => {}\n-        );\n-      },\n-      error => {}\n-    );\n-  }\n-\n-  login(user: {username: string, password: string}): void\n-  {\n-    this.authenticatorService.login(user).pipe(first()).subscribe(\n-      async res => {\n-        await this.authenticatorService.autoUpdateUserWithJwt(res.jwt!); \n-        this.router.navigate(['home'])\n-      },\n-      error => {this.error = 'invalid or wrong username or password'}\n-    );\n-  }\n-\n-  async isUsernameValid(username: string): Promise<boolean> {\n-    return new Promise<boolean>((resolve, reject) => {\n-      this.authenticatorService.isUsernameExist(username).pipe(first()).subscribe(\n-        res => {\n-          resolve(res.exist);\n-        },\n-        error => {reject(false)}\n-      )\n-    });\n-  }\n-\n-  async validateUsernameFn(value: string): Promise<string> {\n-    let message = \"\"\n-    // await this.isUsernameValid(value).then(m => message = m).catch(m => message = m);\n-    return message;\n-  }\n-}\n+import { AfterContentChecked, AfterContentInit, AfterViewChecked, Component, DoCheck, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\n+import { AuthenticatorService } from '../shared/service/Authenticator.service';\r\n+import { MatDialog } from '@angular/material/dialog';\r\n+import { User } from '../shared/model/Authenticator.model';\r\n+import { first } from 'rxjs';\r\n+import { ConfirmDialog } from '../shared/dialog/confirm-dialog/confirm-dialog.component';\r\n+import { Router } from '@angular/router';\r\n+\r\n+@Component({\r\n+  selector: 'app-register',\r\n+  templateUrl: './register.component.html',\r\n+  styleUrls: ['./register.component.scss']\r\n+})\r\n+export class RegisterComponent implements OnInit, AfterContentChecked {\r\n+\r\n+  username: string = ''\r\n+  usernameValid: boolean = false;\r\n+\r\n+  password: string = ''\r\n+  passwordValid: boolean = false;\r\n+\r\n+  alias: string = ''\r\n+  aliasValid: boolean = false;\r\n+\r\n+  validForm: boolean = false;\r\n+\r\n+  error: string = \"\";\r\n+\r\n+  constructor(private authenticatorService: AuthenticatorService, private matDialog: MatDialog, private router: Router) { }\r\n+\r\n+  ngOnInit() {\r\n+  }\r\n+\r\n+  ngAfterContentChecked(): void {\r\n+    this.validForm = !(this.usernameValid && this.passwordValid && this.aliasValid);\r\n+  }\r\n+\r\n+  async register(): Promise<void> {\r\n+    let user: User = {\r\n+      username: this.username,\r\n+      password: this.password,\r\n+      userProfile: {\r\n+        alias: this.alias\r\n+      }\r\n+    }\r\n+\r\n+    let isExist = await this.isUsernameValid(this.username);\r\n+    if(isExist) {\r\n+      this.error = \"Username already Exist\";\r\n+      return;\r\n+    }\r\n+    else\r\n+      this.error = \"\";\r\n+\r\n+    this.authenticatorService.postUser(user).pipe(first()).subscribe(\r\n+      res => {\r\n+        let dialog = this.matDialog.open(ConfirmDialog, {data: {title: \"Register Successful\", message: \"Do you want to auto login with registered information?\\nAnd redirect to home?\"}});\r\n+      \r\n+        dialog.afterClosed().pipe(first()).subscribe(\r\n+          res => {\r\n+            this.login({username: this.username, password: this.password});\r\n+          },\r\n+          error => {}\r\n+        );\r\n+      },\r\n+      error => {}\r\n+    );\r\n+  }\r\n+\r\n+  login(user: {username: string, password: string}): void\r\n+  {\r\n+    this.authenticatorService.login(user).pipe(first()).subscribe(\r\n+      async res => {\r\n+        await this.authenticatorService.autoUpdateUserWithJwt(res.jwt!); \r\n+        this.router.navigate(['home'])\r\n+      },\r\n+      error => {this.error = 'invalid or wrong username or password'}\r\n+    );\r\n+  }\r\n+\r\n+  async isUsernameValid(username: string): Promise<boolean> {\r\n+    return new Promise<boolean>((resolve, reject) => {\r\n+      this.authenticatorService.isUsernameExist(username).pipe(first()).subscribe(\r\n+        res => {\r\n+          resolve(res.exist);\r\n+        },\r\n+        error => {reject(false)}\r\n+      )\r\n+    });\r\n+  }\r\n+\r\n+  async validateUsernameFn(value: string): Promise<string> {\r\n+    let message = \"\"\r\n+    // await this.isUsernameValid(value).then(m => message = m).catch(m => message = m);\r\n+    return message;\r\n+  }\r\n+}\r\n"
                },
                {
                    "date": 1683641826188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,10 @@\n       username: this.username,\r\n       password: this.password,\r\n       userProfile: {\r\n         alias: this.alias\r\n-      }\r\n+      },\r\n+      enable: true\r\n     }\r\n \r\n     let isExist = await this.isUsernameValid(this.username);\r\n     if(isExist) {\r\n"
                }
            ],
            "date": 1682701430628,
            "name": "Commit-0",
            "content": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n"
        }
    ]
}