{
    "sourceFile": "src/app/shared/util-component/mat-form-field-input/mat-form-field-input.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1682705473727,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1682705505322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,18 +167,19 @@\n     return this.validatorFn(this.value);\r\n   }\r\n \r\n   isValidValue(): boolean {\r\n-    \r\n+    let valid = false;\r\n     if(this.required && this.value === '')\r\n     {\r\n \r\n       return false;\r\n     }\r\n \r\n     if(this.validatorFn)\r\n     {\r\n-\r\n+      \r\n+      this.emitValidValue(true);\r\n       return !this.getValidatorMessage();\r\n     }\r\n \r\n     this.emitValidValue(true);\r\n"
                },
                {
                    "date": 1682705531326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,12 +167,11 @@\n     return this.validatorFn(this.value);\r\n   }\r\n \r\n   isValidValue(): boolean {\r\n-    let valid = false;\r\n     if(this.required && this.value === '')\r\n     {\r\n-\r\n+      this.emitValidValue(false);\r\n       return false;\r\n     }\r\n \r\n     if(this.validatorFn)\r\n"
                },
                {
                    "date": 1682705544132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,11 +175,11 @@\n     }\r\n \r\n     if(this.validatorFn)\r\n     {\r\n-      \r\n-      this.emitValidValue(true);\r\n-      return !this.getValidatorMessage();\r\n+      let valid = !this.getValidatorMessage()\r\n+      this.emitValidValue(valid);\r\n+      return valid;\r\n     }\r\n \r\n     this.emitValidValue(true);\r\n     return true;\r\n"
                }
            ],
            "date": 1682705473727,
            "name": "Commit-0",
            "content": "import { Component, Input, OnInit, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\r\nimport { ThemePalette } from '@angular/material/core';\r\nimport { MatFormFieldAppearance, MatFormFieldDefaultOptions } from '@angular/material/form-field';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-mat-form-field-input',\r\n  templateUrl: './mat-form-field-input.component.html',\r\n  styleUrls: ['./mat-form-field-input.component.scss']\r\n})\r\nexport class MatFormFieldInputComponent implements OnInit\r\n{\r\n  @Input()\r\n  value: string | number = '';\r\n\r\n  @Output()\r\n  valueOutput: EventEmitter<string | number> = new EventEmitter();\r\n\r\n  @Output()\r\n  validValueOutput: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  @Input()\r\n  validatorFn: Function = () => \"\";\r\n\r\n  @Input()\r\n  placeholder: string = '';\r\n\r\n  @Input()\r\n  appearance: string = 'fill';\r\n\r\n  @Input()\r\n  matColor: ThemePalette = 'primary';\r\n\r\n  @Input()\r\n  width: number = 40;\r\n\r\n  @Input()\r\n  label: string = '';\r\n\r\n  @Input()\r\n  styleWidth?: string;\r\n  \r\n  @Input()\r\n  required: boolean = false;\r\n\r\n  @Input()\r\n  autoResize: boolean = false;\r\n\r\n  @Input()\r\n  disable: boolean = false;\r\n\r\n  @Input()\r\n  showGoto: boolean = false;\r\n\r\n  @Input()\r\n  showVisibleSwitch: boolean = false;\r\n\r\n  @Input()\r\n  showCopyToClipboard: boolean = false;\r\n\r\n  @Input()\r\n  showGenerateValue: boolean = false;\r\n\r\n  //input copy\r\n  @Input()\r\n  copyDisplayMessage: string = this.value.toString();\r\n\r\n  //switch\r\n  @Input()\r\n  switchVisibility: boolean = false;\r\n\r\n  @Input()\r\n  defaultType: string = 'text';\r\n\r\n  @Input()\r\n  switchType: string = 'password';\r\n\r\n  @Input()\r\n  onIcon: string = 'visibility';\r\n\r\n  @Input()\r\n  offIcon: string = 'visibility_off';\r\n\r\n  //case of number\r\n\r\n  @Input()\r\n  min: string = '';\r\n\r\n  @Input()\r\n  max: string = '';\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  emitValue(): void\r\n  {\r\n    this.valueOutput.emit(this.value);\r\n  }\r\n\r\n  emitValidValue(valid: boolean): void\r\n  {\r\n    this.validValueOutput.emit(valid);\r\n  }\r\n\r\n  clear(): void\r\n  {\r\n    if(this.defaultType === 'number')\r\n      this.value = 0;\r\n    else\r\n      this.value = '';\r\n    this.valueOutput.emit(this.value);\r\n  }\r\n\r\n  getSize(data: string): number\r\n  {\r\n    let offset = 10;\r\n    if(this.showCopyToClipboard)\r\n      offset += 5;\r\n    if(this.showGenerateValue)\r\n      offset += 5;\r\n    if(this.showGoto)\r\n      offset += 5;\r\n    if(this.showVisibleSwitch)\r\n      offset += 5;\r\n    \r\n    if(!this.autoResize)\r\n      return this.width;\r\n\r\n    if(data.length <= 10)\r\n      return this.width;\r\n    else\r\n      return data.length + offset;\r\n  }\r\n\r\n  getAppearance(): MatFormFieldAppearance\r\n  {\r\n    let appearance: MatFormFieldAppearance = 'fill';\r\n    switch(this.appearance.toLowerCase())\r\n    {\r\n      case 'fill':\r\n      case '1':\r\n        appearance = 'fill'\r\n        break;\r\n\r\n      case 'outline':\r\n      case '2':\r\n        appearance = 'outline'\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return appearance;\r\n  }\r\n\r\n  openLink(link: string): void\r\n  {\r\n    window.open(link);\r\n  }\r\n\r\n  getValidatorMessage(): string {\r\n    return this.validatorFn(this.value);\r\n  }\r\n\r\n  isValidValue(): boolean {\r\n    \r\n    if(this.required && this.value === '')\r\n    {\r\n\r\n      return false;\r\n    }\r\n\r\n    if(this.validatorFn)\r\n    {\r\n\r\n      return !this.getValidatorMessage();\r\n    }\r\n\r\n    this.emitValidValue(true);\r\n    return true;\r\n  }\r\n}\r\n"
        }
    ]
}